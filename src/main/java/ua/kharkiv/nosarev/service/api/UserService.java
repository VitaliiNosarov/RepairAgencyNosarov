package ua.kharkiv.nosarev.service.api;

import ua.kharkiv.nosarev.entitie.User;
import ua.kharkiv.nosarev.entitie.enumeration.UserRole;

import java.util.List;

public interface UserService {

    /**
     * Return User from database with the same login and password.
     * Throws Authentication exception when email/password not correct
     * or if User has another password than in database
     *
     * @param userEmail
     * @param userPass
     * @return User with same email and password from database
     */
    User getUserByEmailPass(String userEmail, String userPass);

    /**
     * Validate User and save it to Database with encoded password.
     * Return same user with id generated by database.
     * If user has wrong fields or if User is absent in database throws Registration exception
     *
     * @param user
     * @return User with id generated by database
     */
    User saveUser(User user);

    /**
     * Validate user and update it in database.
     * If user.password is new save it after encoding
     *
     * @param user
     * @return same User from database after updating
     */
    User updateUser(User user);

    /**
     * Check id and returns User from Database with the same id.
     * Throws ServiceException if id is <=0
     *
     * @param id
     * @return User from database
     */
    User getUserById(long id);

    /**
     * Returns List of users in range in range
     * between currentPage and recordsPerPage
     *
     * @param currentPage    current page in pagination
     * @param recordsPerPage amount of rows on page
     * @return List of users
     */
    List<User> findUsers(long currentPage, long recordsPerPage);

    /**
     * Returns all users from database where account.role is equal param role
     *
     * @param role
     * @return List<User> with same role as in parameters
     */
    List<User> getAllUsersByRole(UserRole role);

    /**
     * Returns actual amount of Users in database which is need in pagination
     *
     * @return number of all accounts in database
     */
    long getAmountOfUsers();
}
